#!/usr/bin/python3
'''
Simple DNS block list (DNSBL), using addresses generated by another script
'''
import sys, os, socket, logging  # pylint: disable=multiple-imports
from collections import defaultdict

DEFAULT_DIRECTORY = os.path.join('', 'var', 'dnsbl')
DNSBL_DIRECTORY = os.getenv('DNSBL_DIRECTORY', DEFAULT_DIRECTORY)
DNSBL_HOST = os.getenv('DNSBL_HOST', '::1')
DNSBL_PORT = int(os.getenv('DNSBL_PORT', '5353'))

logging.basicConfig(level=logging.DEBUG if __debug__ else logging.INFO)

def dnsbl(loop=sys.maxsize):
    '''
    Listen for queries and return valid response or NXDOMAIN if not found

    https://realpython.com/python-sockets/
    https://pythontic.com/modules/socket/udp-client-server-example
    '''
    with socket.socket(socket.AF_INET6, socket.SOCK_DGRAM) as server:
        server.bind((DNSBL_HOST, DNSBL_PORT))
        logging.debug('DNSBL listening...')
        while loop > 0:
            logging.debug('%d loops remaining', loop)
            query, address = server.recvfrom(512)
            logging.debug('query: %r, parsed: %r, from %s',
                          query, parse(query), address)
            loop -= 1
        logging.debug('dnsbl server exiting')

def parse(query):
    '''
    Strip header off query and return the parts
    '''
    txid = query[:2]
    flags = query[2:4]
    questions = query[4:6]
    answer_rrs = query[6:8]
    authority_rrs = query[8:10]
    additional = query[10:12]
    query = query[12:]
    logging.debug('txid: %r, flags: %r, questions: %r', txid, flags, questions)
    return query

if __name__ == '__main__':
    dnsbl(loop=1)
